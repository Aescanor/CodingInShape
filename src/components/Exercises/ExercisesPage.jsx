import React, { useState, useEffect } from "react";
import { useSelector } from "react-redux";
import { useNavigate } from "react-router-dom";
import { USER_PROFIL } from "../API/apiUser";
import ConditionalNavLinks from "../ConditionalNavLinks/ConditionalNavLinks";
import Card from "../Card/Card";
import '../../../sass/pages.scss'

export default function ExercisesPage() {
  // √âtat local :
  const [userData, setUserData] = useState(null);
  const [isLoading, setIsLoading] = useState(false);
  const [isAdmin, setIsAdmin] = useState(false);
  const [isAdminLoaded, setAdminLoaded] = useState(false);

  // Navigation :
  const navigate = useNavigate();

  // Redux :
  const isAuthenticated = useSelector((state) => state.auth.isAuthenticated);
  const token = useSelector((state) => state.auth.token);

  useEffect(() => {
    const fetchUserData = async () => {
      try {
        if (!isAuthenticated) {
          navigate("/login");
          return;
        }

        const response = await fetch(`${USER_PROFIL}`, {
          method: "GET",
          headers: {
            "Content-Type": "application/json",
            Authorization: `Bearer ${token}`,
          },
          credentials: "include",
        });

        if (response.ok) {
          const data = await response.json();
          setUserData(data.userData);

          // Mise √† jour de l'√©tat local isAdmin
          setIsAdmin(data.userData.isAdmin);
          setAdminLoaded(true);

          setIsLoading(false);
        } else {
          console.error("Impossible de r√©cup√©rer les donn√©es de l'utilisateur.");
          setIsLoading(false);
          navigate("/login");
        }
      } catch (error) {
        console.error("Erreur lors de la r√©cup√©ration des donn√©es de l'utilisateur :", error);
        setIsLoading(false);
      }
    };

    fetchUserData();
  }, [isAuthenticated, token, navigate]);

  return (
    <>
      {userData && (
        <div className="ContainerCardsExercices">
          <Card
            title={"Liste des exercices"}
            content={"Retrouvez la liste des exercices"}
            link={`/exercises-list/`}
            textLink={"Voir la liste des exercices"}
          />

          <Card
            title={"Routine al√©atoire"}
            content={`üöÄ Vous ne savez pas par o√π commencer ? Laissez-vous guider par notre app !
            üí™ Elle vous proposera 1 exercice par zone musculaire : üßò‚Äç‚ôÇÔ∏è cou, üí™ √©paules, üèãÔ∏è‚Äç‚ôÇÔ∏è dos, üï∫ hanches et üèÉ‚Äç‚ôÇÔ∏è jambes.
            ‚è±Ô∏è Chaque exercice dure 20 secondes, soit moins de 2 minutes pour votre bien-√™tre. C'est rapide, efficace et vous permettra de vous sentir revitalis√© en un rien de temps !
            Rejoignez-nous sur Coding in Shape et d√©couvrez comment prendre soin de votre corps, de votre esprit et de votre code. En quelques minutes par jour, vous pouvez renforcer votre corps tout en restant au top de votre jeu de d√©veloppeur. üíª‚ú®
            `}
            link={"/get-random-routine"}
            textLink={"D√©marrer la routine"}
          />
        </div>
      )}

      <ConditionalNavLinks isAdminLoaded={isAdminLoaded} isAdmin={isAdmin} />
    </>
  );
}
